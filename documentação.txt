Nesse curso, vou utilizar PHP para aprender os conceitos da programção orientada a objetos.

Os primeiros conceitos abordados são: Classes e Objetos.
A classe é como um molde, ela define atributos e regras, para que sejam criadas a partir de si os objetos.
A classe é um molde e o objeto é o resultado do uso desse molde, mas os objetos podem variar suas características entre si.
O exemplo de canetas é usado, canetas seguem um molde, classe, mas podem ter cor diferentes e formatos um pouco diferentes, mas a funcionalidade é a mesma.

Objetos criados por classe possuem: Atributos, métodos e estado.
Os atributos são suas características: cor, modelo, ano, nome, forma física, entre muito e muitas outras coisas.
Métodos são as funcionalidades desse objeto, o que ele faz. (outro nome para funções).
Estado é como o objeto está, se ele está com cor tal, se a forma física é essa, se o nome é o mesmo, etc.

A classe define os atributos e métodos, o estado pode ser alterado, e isso depende do objeto.
A criação de um objeto através de uma classe se chama instanciamento

Classe -> Definição de atributos e métodos.
Objeto -> Instância de uma classe, tendo seu estado definido com sua criação.

São considerados três pilares no POO: Encapsulamento, herança e polimorfismo.

||Encapsulamento: Esse pilar define que todo software deve ser imutável perante o usuário e a si mesma ou semelhantes, um código encapsulado é aquele que não precisa de interação interna para ser utilizado e reconhecido. No encapsulamento, o conceito de mensagens é a troca de pergunta e informação com a capsula, você manda algo, a capsula responde. O local onde se tem a interação, é chamada de INTERFACE, é a lista de serviços fornecidos por um componente, sendo o contato com o mundo exteriror que define o que o objeto dessa classe faz.
**INTERFACE: Uma interface é semelhante a uma classe, com a diferença central sendo a falta de atributos, apenas tendo métodos. Uma interface é o que vai por cima de um objeto instânciado de uma classe, dando mais firmeza e eficiência ao programa. Os métodos de uma interface são chamados de métodos abstratos, métodos com intuito mas não implementados/programados. Eles ocorrem não na interface, mas sim no sistema. Em toda interface, todos os métodos são public, já que são totalmente acessíveis a qualquer um.
  Para os métodos abstratos ganharem a sua funcção, você deve, na classe, chamar a interface. Assim você adiciona os métodos abstratos na interface e também as suas funcionalidades.

Conceitos de POO:

||Abstração -> Separação de atributos e métodos em um objeto que são relevantes para algo. Um exemplo seria:
Você ter o objeto pessoa vindo da classe humano, tem MUITAS características, mas para o cadastro dessa pessoa no gov.br, você usa alguns dados, ao invés de TODOS. Isso é abstração, de forma bem simples.

||Visibilidade -> Indica o nível de acesso aos componentes de uma classe, você tem esses indicadores: + (public), - (private), # (protected).

+ -> Uma classe public pode ser acessada e utilizada em qualquert instância.
- -> Uma classe private pode ser acessada apenas dentro da própria classe e seus objetos.
# -> Uma classe protected pode ser acessada apenas pela própria classe e por classes derivadas dessa mesma.
--PHP apenas-- -> var -> Isso determina uma visibilidade padrão para os atributos, coisa que fiz no primeiro ex. São públicos.

||Métodos de Acesso ou Getters -> São métodos que têm a função de obter dados específicos, garantindo que um objeto não tenha acesso a todos os atributos de uma classe.

||Métodos Modificadores ou Setters -> São métodos com a função de destinar dados da forma correta a um atributo. Altera o valor de um atributo. 

||Método Construtor ou Construct -> Ao instânciar um objeto, o método constructor tem como função pré-definir alguns atributos desse novo objeto, sem a necessidade de serem definidos após sua criação. Assim como se é feito em uma linha de produção, por exemplo.